NAME=FEniCS
VERSION=1.3.0
BUILDCHAIN=ignore

MODULEFILE_PATH=${INSTALL_PATH}/conf/modulefiles/candi/toolbox/${NAME}
CONFIG_FILE=${MODULEFILE_PATH}/${VERSION}
CURRENT_MODULES=$(echo ${LOADEDMODULES} | sed 's/:/\ /')

# **********************************************************************************
package_specific_conf() {
    # Generate modulefile
    
    mkdir -p ${MODULEFILE_PATH}
    rm -f $CONFIG_FILE
    echo "#%Module 1.0
#
#  FEniCS module for use with 'environment-modules' package:
#

conflict candi/toolbox

module load ${CURRENT_MODULES}

# Define prefix so PATH and MANPATH can be updated.
setenv        INSTALL_PATH	 ${INSTALL_PATH}
prepend-path  PATH               ${INSTALL_PATH}/bin
prepend-path  PYTHONPATH         ${INSTALL_PATH}/lib/python${PYTHONVER}/site-packages
prepend-path  PYTHONPATH         ${INSTALL_PATH}/lib64/python${PYTHONVER}/site-packages
prepend-path  LD_LIBRARY_PATH    ${INSTALL_PATH}/lib
prepend-path  DYLD_LIBRARY_PATH  ${INSTALL_PATH}/lib
prepend-path  PKG_CONFIG_PATH    ${INSTALL_PATH}/lib/pkgconfig
prepend-path  MANPATH            ${INSTALL_PATH}/share/man
prepend-path  CPLUS_INCLUDE_PATH ${INSTALL_PATH}/include
prepend-path  CMAKE_PREFIX_PATH  ${INSTALL_PATH}

setenv        BOOST_DIR          ${INSTALL_PATH}
" >> $CONFIG_FILE
    
    echo
    echo "${NAME} has now been installed in"
    echo
    cecho ${GOOD} "    ${INSTALL_PATH}"
    echo
    echo "To update your environment variables, use the created modulefile:"
    echo
    cecho ${GOOD} "    $CONFIG_FILE"
    echo

    # Generate configuration file for building against FEniCS installation

    mkdir -p $INSTALL_PATH/share/fenics
    CONFIG_FILE=$INSTALL_PATH/share/fenics/fenics.conf
    rm -f $CONFIG_FILE
    echo "
# Source this file to set up your environment for building against FEniCS

# Standard paths
export INSTALL_PATH=${INSTALL_PATH}
export PATH=\$INSTALL_PATH/bin:\$PATH
export PYTHONPATH=\$INSTALL_PATH/lib/python${PYTHONVER}/site-packages:\$PYTHONPATH
export LD_LIBRARY_PATH=\$INSTALL_PATH/lib:\$LD_LIBRARY_PATH
export DYLD_LIBRARY_PATH=\$INSTALL_PATH/lib:\$DYLD_LIBRARY_PATH
export PKG_CONFIG_PATH=\$INSTALL_PATH/lib/pkgconfig:\$PKG_CONFIG_PATH
export MANPATH=\$INSTALL_PATH/share/man:\$MANPATH
export CPLUS_INCLUDE_PATH=\$INSTALL_PATH/include:\$CPLUS_INCLUDE_PATH
export CMAKE_PREFIX_PATH=\$INSTALL_PATH:\$CMAKE_PREFIX_PATH
" >> $CONFIG_FILE

    for PACKAGE in ${PACKAGES[@]}
    do
	case ${PACKAGE} in
            *boost) echo "
export BOOST_DIR=\$INSTALL_PATH
" >> $CONFIG_FILE;;
	    *vtk | *vtkwithqt) echo "
# FIXME: This needs to be updated when the VTK version is changed
export LD_LIBRARY_PATH=\$INSTALL_PATH/lib/vtk-5.8:\$LD_LIBRARY_PATH
export DYLD_LIBRARY_PATH=\$INSTALL_PATH/lib/vtk-5.8:\$DYLD_LIBRARY_PATH
" >> $CONFIG_FILE;;
	esac
    done
    
    echo "To update your environment variables, run the following command:"
    echo
    cecho ${GOOD} "    source $CONFIG_FILE"
    echo
    echo "For future reference, we recommend that you add this command to your"
    echo "configuration (.bashrc, .profile or similar)."
    echo
}
